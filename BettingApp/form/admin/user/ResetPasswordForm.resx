<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="personPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABGCAYAAAB8MJLDAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAq
        8gAAKvIByqKIbQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAATCSURBVHhe7dvn
        qxxVHIfxtSAYu7EEG6L/gC1gR8SXBhURg90oJgj2ggTsWEBExIYVjSJiwYaCUcE3+kLFTuzYQY29RsXy
        PEvu5eT6m7mzO3d3z0z2Cx8Ic3fOnjPZmT1tO0PMmtgDV+IFfIU/V/oSz+MK7A5f25qsjUX4DP9W9CkW
        wnMbnX3wLqJGVvE29kYjcwL+QNSwXljGAjQq5yFqTB3nohE5GH8jakRqBbzXVeWTYpkHIevsgJ8RNUA2
        9AZ4X6dP+rXgsRtRdjF+wvbINvciqrhehBdouuyIlxCVobuRZXZB0Ud/KdZF1czC04jK8j12Qna5CVGF
        P8DG6DWb4ENEZXobZZU1UNTR8aHYbw5FVObn8D2ziR//qKLvoU5FPfd9RGXvjGxyOKJKXoW6uRpR2ccj
        m5yOQVXSXmBU9vnIJpchquSBqBvLiMp2VJlNzkZUyaNQN8ciKvtCZJMjEVXyYtTNpYjKPgnZZC9ElXwF
        dfMqorJ9z2zixMU3iCq6H/rNvojK9L2ymyyxjx5V1jHAOug1nvMyojLvQnY5AFFldTt66RD52jsQlaX9
        kWWKBjB6ABtgumyIhxCVoaeQbewS/4Wo4nL291Rsganx2Glwtjg6V5ad5UgwTVGvMOWQ9i08uZL/rjKL
        dAoakdsQNaCOW9GYOMVlVzVqSD+uhWU2LnZjf0DUqCq+x9FodDaFn4bfETUy4nLZzYgelo3N5nBo+yi+
        w9RGe+wROITeDK2PjXSWWLM9MM4444wzTsuyHezIuPXFEZ59fleD/cr7BxNfgf7bY/7tTfhaz3FOcVs0
        KnvCpauiBY1+uMByPdxjlGUc558DKxo1YCa55eYsrI+Rx4ZfhG8RVXaQnBd0cWRkF2IePkFUuWH6Asdg
        aLFP/wSiylTh6NCH3Ttw0lP+22N1Ro6PYeBdaqepXZqOKhBxyXwJ3DG2GzbCdHEvwVycCM/t5f28iANb
        L3BsXzbfN+FXOJR1j+BMrOG7l8gLfwssO3rPlEPpmViSWyU+ddPv7Yibo3wgDnIo6+13CX5BVIcJ1vUM
        zEiKFj5TflS3wrCyNe5BVJdU7YvgomfZ/7xTVvMxqhyCoiU5Wffj0Fe8h8vu+dewDUYdu9tvIKqjfCbY
        O+0p3sdlT19XgKqs8gwrriY9g6iusr/i3GTlPI6oID2LXvb8DSvuLXwOUZ31MCrlMEQFyLX69ZBr/FSW
        3Q4+M0rjVfwY0cn296tsdR113Eu8HFEb7CiV/gdegOhEZb9TO0nRBkstRhivTNGVy3aDcknuQ9QWvzbD
        EeSZiE6w1zUHTYsds6KusyvY/4u/z4le7C6tpsZptahNy7BK/Kla9MLf0ORVG/szRWuSu2Iy1yF6kXt7
        mp47EbXtGkym6KdtWe3F6zNFW+0mbwMfFtEL3M/Thl9wurHia0Rt7I5gj0gOpNym1pa4rzBqY3cke3ly
        IJXVXtyaORlRG7vfcA8mB1JZ/SKjZpyPjNp4PzqvJwdSDjHbEidaozY6uAt/7OT0dNvyI6a203mC7rTW
        1D/4682JOfu2iH6R6oJspanutnK6rPA7cnVgX6e7BTX64+rABZzuULdoFqjNPsLkRkwvgp+Esq3qbeHH
        3mW2LTudTuc/9ioIXtIx/SoAAAAASUVORK5CYII=
</value>
  </data>
</root>